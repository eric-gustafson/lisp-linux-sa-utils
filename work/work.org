#+title: Short Term TODO's and babel scratch pad
#+author: eric gustafson

* TODO interfaces function call for local interaces

* TODO we also want to do this on a remote router


* TODO manage hostapd

  A Unix shell like fork/exec and then watch the pid from here should
  be pretty trivial.

#+BEGIN_SRC sh :results output raw
  sudo /usr/sbin/hostapd -d /etc/hostapd/hostapd.conf  2>&1
:
#+END_SRC

#+RESULTS:
random: Trying to read entropy from /dev/random
Configuration file: /etc/hostapd/hostapd.conf
Could not read interface ap0 flags: No such device
nl80211: Driver does not support authentication/association or connect commands
nl80211: deinit ifname=ap0 disabled_11b_rates=0
nl80211: Remove monitor interface: refcount=0
netlink: Operstate: ifindex=0 linkmode=0 (kernel-control), operstate=6 (IF_OPER_UP)
Could not read interface ap0 flags: No such device
nl80211: Set mode ifindex 0 iftype 2 (STATION)
nl80211: Failed to set interface 0 to mode 2: -19 (No such device)
nl80211 driver initialization failed.
hostapd_interface_deinit_free(0xf608f0)
hostapd_interface_deinit_free: num_bss=1 conf->num_bss=1
hostapd_interface_deinit(0xf608f0)
ap0: interface state UNINITIALIZED->DISABLED
hostapd_bss_deinit: deinit bss ap0
ap0: AP-DISABLED 
hostapd_cleanup(hapd=0xf628a8 (ap0))
hostapd_free_hapd_data: Interface ap0 wasn't started
hostapd_interface_deinit_free: driver=(nil) drv_priv=(nil) -> hapd_deinit
hostapd_interface_free(0xf608f0)
hostapd_interface_free: free hapd 0xf628a8
hostapd_cleanup_iface(0xf608f0)
hostapd_cleanup_iface_partial(0xf608f0)
hostapd_cleanup_iface: free iface=0xf608f0


#+BEGIN_SRC sh :results output raw
   cat /etc/hostapd/hostapd.conf
#+END_SRC

#+RESULTS:
### Wireless network name ###

interface=ap0
driver=nl80211
country_code=US
ssid=g3
hw_mode=g
channel=1
wpa=2
wpa_passphrase=bustergus25
## Key management algorithms ##
wpa_key_mgmt=WPA-PSK

## Set cipher suites (encryption algorithms) ##
## TKIP = Temporal Key Integrity Protocol
## CCMP = AES in Counter mode with CBC-MAC
wpa_pairwise=TKIP
rsn_pairwise=CCMP

## Shared Key Authentication ##
auth_algs=1

## Accept all MAC address ###
macaddr_acl=0




* TODO algo1
  get list of network interfaces or seed it.
  
  filter out wired ones

  find the target interface

  generate hostapd and fork/exec

  setup interace
  

* TODO udev info
  [[https://opensource.com/article/18/11/udev]]  

* TODO network/interfaces file
  Generate this file taking a list of interface CLOS objects

#+BEGIN_SRC lisp :results output
   (princ (network/interfaces))
#+END_SRC



* TODO write a script that burns the RBP image, and puts these file in the images
  cpio them right onto the image?  Or something simpler?

* TODO snot has interfaces, local-net, ...
  wifi will have these as well.  Maybe a new library?  Anyhow, organize, organize


* TODO kick off a nmap if we see a local address

** TODO predicate if it's a new address
** TODO predicate if we need a refresh

** simultaneous AP and managed mode
*** udev rule
#+BEGIN_SRC 
SUBSYSTEM=="ieee80211", ACTION=="add|change", ATTR{macaddress}=="b8:27:eb:ff:ff:ff", KERNEL=="phy0", \
  RUN+="/sbin/iw phy phy0 interface add ap0 type __ap", \
  RUN+="/bin/ip link set ap0 address b8:27:eb:ff:ff:ff"
#+END_SRC

#+BEGIN_SRC lisp :results value
  (let ((lines 
         (with-open-file (*standard-input* #P"/proc/net/dev")
           (loop :for l = (read-line nil nil) :while l :collect (ppcre:split "\\s" l))
           )))
    (loop :for l in lines :do (format t "~a~%" l) )
    lines)
#+END_SRC

#+RESULTS:
#+begin_example
(Inter-|   Receive                                                |  Transmit)
( face |bytes    packets errs drop fifo frame compressed multicast|bytes
 packets errs drop fifo colls carrier compressed)
(wlx9cefd5fdd60e:       0       0    0    0    0     0          0         0
    0       0    0    0    0     0       0          0)
(    lo:  211828     114    0    0    0     0          0         0   211828
 114    0    0    0     0       0          0)
(enxb827eb659c11:       0       0    0    0    0     0          0         0
    0       0    0    0    0     0       0          0)
( wlan0: 4389488   40233    0    0    0     0          0     17994   600104
 3070    0    0    0     0       0          0)
#+end_example




#+BEGIN_SRC sh :results output
  ifconfig
#+END_SRC

#+RESULTS:


#+BEGIN_SRC sh :results raw
  ip link
#+END_SRC


#+BEGIN_SRC lisp  :results table
  (ip-link)
#+END_SRC

** TODO get wireless information


